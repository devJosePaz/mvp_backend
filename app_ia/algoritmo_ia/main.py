from src.interfaces.cli import get_user_preferences, save_recommendations
from src.models.recommender import StudyRecommender
from src.data_processing.clean_data import load_raw_data, clean_and_merge

def main():
    try:
        # 1. Carregar e preparar dados
        print("‚è≥ Carregando dados do sistema...")
        math, port = load_raw_data()
        data = clean_and_merge(math, port)
        
        # 2. Inicializar sistema de recomenda√ß√£o
        print("‚öôÔ∏è Inicializando motor de recomenda√ß√µes...")
        recommender = StudyRecommender(data)
        print("‚úÖ Sistema pronto!\n")
        
        # 3. Modo interativo
        while True:
            try:
                prefs = get_user_preferences()
                if not prefs:  # Usu√°rio cancelou
                    break
                
                print("\nüîç Buscando recomenda√ß√µes...")
                recs = recommender.recommend(prefs)
                
                # Salva automaticamente em JSON
                saved_file = save_recommendations(recs)
                
                continuar = input("\nDeseja fazer outra consulta? (s/n): ").strip().lower()
                if continuar != 's':
                    print("\nObrigado por usar o sistema! üëã")
                    break
                    
            except KeyboardInterrupt:
                print("\nOpera√ß√£o interrompida pelo usu√°rio.")
                break
            except Exception as e:
                print(f"\n‚ö†Ô∏è Erro: {str(e)}")
                print("Por favor, tente novamente.\n")
                
    except Exception as e:
        print(f"\n‚ùå ERRO CR√çTICO: {str(e)}")
        print("O sistema n√£o pode ser inicializado.")

if __name__ == "__main__":
    main()